from aiogram import Router, F
from aiogram.filters import Command
from aiogram import types

from aiogram.types import FSInputFile
import __main__

import keyboards.playerKeyboards
from keyboards import playerKeyboards

routerPlayer = Router()


@routerPlayer.message(F.text == "–ù–∞—á–∞—Ç—å!üéÆ")
async def start_play(message: types.Message):
    await message.answer(text="""–î–û–ë–†–û –ü–û–ñ–ê–õ–û–í–ê–¢–¨ –ù–ê –°–ü–ò–†–¢–û–ö–ò–ê–î–£!""",
                         reply_markup=keyboards.playerKeyboards.get_main_keyboard_for_player().as_markup(
                             resize_keyboard=True,
                             input_field_placeholder="–ñ–º—è–∫–Ω–∏ –∫–Ω–æ–ø–æ—á–∫—É :)"))


@routerPlayer.message(Command("start"))
async def command_start(message: types.Message):
    await message.answer(
        f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! \n–ü—Ä–æ—à—É –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã <b>/reg</b>. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –º—ã —Ç–µ–±–µ –≤—Å–µ –æ–±—ä—è—Å–Ω–∏–ºüòä")

# –†–ê–°–ü–ò–°–ê–¢–¨!!
@routerPlayer.message(Command("help"))
async def help_command_heandler(message: types.Message):
    await message.answer(""""""
                         )


@routerPlayer.message(F.text == "–ë–∏–ª–µ—Ç—ãüé´")
async def get_tickets(message: types.Message):
    tickets = await __main__.db.show_ticket(message.from_user.id)
    if tickets == []:
        await message.answer(f"–£ —Ç–µ–±—è –Ω–µ—Ç –±–∏–ª–µ—Ç–æ–≤, –±–µ–≥–æ–º –Ω–∞ –∫–∞—Å—Å—É!")
    else:
        for ticket in tickets:
            await message.answer(f"----- –ë–ò–õ–ï–¢ ‚Ññ{ticket[0]} -----\n–ò–ì–†–ê: {ticket[1]}")


@routerPlayer.message(F.text == "–†–µ–π—Ç–∏–Ω–≥ü•á")
async def get_raiting(message: types.Message):
    rating = await __main__.db.show_rating(message.from_user.id)
    await message.answer(text=rating)


@routerPlayer.message(F.text == "–ü—Ä–∞–≤–∏–ª–∞üßê")
async def get_rule(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏ –∏–≥—Ä—É, –∏ —è —Ä–∞—Å—Å–∫–∞–∂—É —Ç–µ–±–µ –ø—Ä–∞–≤–∏–ª–∞ :)",
                         reply_markup=playerKeyboards.get_rules_keyboard_for_player().as_markup())


@routerPlayer.callback_query(F.data.contains("rule_game"))
async def get_rules(callback: types.CallbackQuery):
    game = callback.data.split("_")[2]
    await callback.message.delete()
    if game == "1":
        await callback.message.answer("–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã 1")
    if game == "2":
        await callback.message.answer("–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã 2")
    if game == "3":
        await callback.message.answer("–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã 3")
    if game == "4":
        await callback.message.answer("–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã 4")
    if game == "5":
        await callback.message.answer("–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã 5")
    if game == "6":
        await callback.message.answer("–ü—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã 6")
